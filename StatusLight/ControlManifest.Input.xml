<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="VARMPCF" constructor="StatusLight" version="0.0.1" display-name-key="StatusLight" description-key="StatusLight description" control-type="virtual" >
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
    <property name="StatusLightPCF" display-name-key="StatusLight_Display_Key" description-key="Format Icon Content Before Value Field" of-type-group="numbers" usage="bound" required="true" />
    <property name="IconWebResourceName" display-name-key="Icon Web Resource Name" description-key="Logical web resouce name icon to replace defaut icon, the icon must be in SVG format" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="IconWebResourceSize" display-name-key="Icon Web Resource Size" description-key="Icon size in px for WebResource only, defaut will be set to 24 px" of-type="Enum" usage="input" required="false">
      <value name="16" display-name-key="16">16</value>
      <value name="20" display-name-key="20">20</value>
      <value name="24" display-name-key="24">24</value>
      <value name="28" display-name-key="28">28</value>
      <value name="32" display-name-key="32">32</value>
    </property>
    <property name="DefautIcon" display-name-key="Defaut Icon" description-key="Default icon when there is no icon or fails to get from WebResource, default icon will be set to ShieldFilled." of-type="Enum" usage="input" required="true" default-value="1">
      <value name="ShieldFilled" display-name-key="ShieldFilled">1</value>
      <value name="AccessibilityFilled" display-name-key="AccessibilityFilled">2</value>
      <value name="AlignSpaceEvenlyVerticalFilled" display-name-key="AlignSpaceEvenlyVerticalFilled">3</value>
      <value name="AlertOnFilled" display-name-key="AlertOnFilled">4</value>
      <value name="BotSparkleFilled" display-name-key="BotSparkleFilled">5</value>
      <value name="HeartFilled" display-name-key="HeartFilled">6</value>
      <value name="MailFilled" display-name-key="MailFilled">7</value>
    </property>
    <property name="IconPosition" display-name-key="Icon Position" description-key="Icon Position On Input field, before or after value input" of-type="Enum" usage="input" required="true" default-value="0">
      <value name="Before" display-name-key="Before">0</value>
      <value name="After" display-name-key="Before">1</value>
    </property>
    
    <property name="LevelValue1" display-name-key="Level Range 1" description-key="For range level 1, if the input value is equal to or greater than this parameter, the status light will be set to the color for level range 1" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="LevelValue2" display-name-key="Level Range 2" description-key="For range level 2, if the input value is equal to or greater than this parameter and less than level range 1 value, the status light will be set to the color for level range 2" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="LevelValue3" display-name-key="Level Range 3" description-key="For range level 3, if the input value is equal to or greater than this parameter and less than level range 2 value, the status light will be set to the color for level range 3" of-type="SingleLine.Text" usage="input" required="true" />
    <property name="ColorLevel1" display-name-key="Color Range 1" description-key="For color range 1, if the color is not valid or is null, it will be replaced with green. Format color must be in hexadecimal or name color" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="ColorLevel2" display-name-key="Color Range 2" description-key="For color range 2, if the color is not valid or is null, it will be replaced with yellow. Format color must be in hexadecimal or name color" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="ColorLevel3" display-name-key="Color Range 3" description-key="For color range 3, if the color is not valid or is null, it will be replaced with red. Format color must be in hexadecimal or name color" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="BackgroundColorField" display-name-key="Backgorund Color Field" description-key="If the color is not valid or is null, it will be replaced for defaut color #f5f5f5" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="BorderColorField" display-name-key="Border Color Field" description-key="If the color is not valid or is null, it will be replaced for defaut color #f5f5f5" of-type="SingleLine.Text" usage="input" required="false" />
    
    <resources>
      <code path="index.ts" order="1"/>
      <platform-library name="React" version="16.14.0" />
      <platform-library name="Fluent" version="9.46.2" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/StatusLight.css" order="1" />
      <resx path="strings/StatusLight.1033.resx" version="1.0.0" />
      -->
    </resources>
    <feature-usage>
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
  </control>
</manifest>
